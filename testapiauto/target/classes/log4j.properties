##通过根日志记录器指定日志级别及输出源
##日志输出的优先级： debug < info < warn < error < fatal
##定义根日志记录器的日志级别(info)及输出源的别名(console,myFile)
##该定义让日志在控制台和文件输出，并且只输出info级别以上的日志
#log4j.rootLogger=info,console,myFile
########配置输出源console的具体实现为控制台输出#######
##定义输出源别名console（即根日志记录器定义的输出源）
##的实现类是ConsoleAppender（控制台输出源）log4j.appender.console=org.apache.log4j.ConsoleAppender
##指定日志输出格式的格式转换器为PatternLayout实现类
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console=org.apache.log4j.ConsoleAppender
##定义日志输出的具体格式
#log4j.appender.console.layout.ConversionPattern=%d{yyyy MM dd HH\:mm\:ss:sss} %-5p [%l.%M()] - %m%n
########配置输出源myFile的具体实现为文件输出#######
##定义输出源别名myFile（即根日志记录器定义的输出源）
##的实现类是RollingFileAppender（文件输出源）log4j.appender.myFile=org.apache.log4j.RollingFileAppender
##定义日志文件的存储路径
#log4j.appender.myFile.File=src/main/logs/testapiauto.log
##DailyRollingFileAppender每天产生一个日志文件
#log4j.appender.myFile=org.apache.log4j.DailyRollingFileAppender
##设置日志文件后缀名,决定着多长时间创建一个新的文件！yyyyMMdd每天一个，yyyyMMddHH第小时一个,...
#log4j.appender.myFile.DatePattern='.'yyyy-MM-dd
##-----------------------------------日志记录字符集
#log4j.appender.console.Encoding=UTF-8
##定义日志文件的大小
##log4j.appender.myFile.MaxFileSize=1024kb
##定义日志文件最多生成几个（从0开始算1个，即此处最多3个文件）
##超过该大小则会覆盖前面生成的文件
##log4j.appender.myFile.MaxBackupIndex=2
##指定日志输出格式的格式转换器为PatternLayout实现类
#log4j.appender.myFile.layout=org.apache.log4j.PatternLayout
########输出格式解释#######
##%d: 日志打印的时间点，默认格式为ISO8601，也可以另外指定格式，
##定义如下： %d{yyy年MM月dd日 HH时mm分ss秒SSS}，则会输出：
##2018年01月06日 14时47分45秒590
##%p: 输出日志级别，即DEBUG，INFO，WARN，ERROR，FATAL,,,,
##%-5p：表示字符小于5位，则字符居左（不加“-”号则字符居右），你可以举一反三
##%c: 日志所在类的全名
##%M: 日志所在方法的名字
##%m: 日志信息
##%n: 输出一个回车换行符
##%L: 输出代码中的行号
#
#
# priority  :debug<info<warn<error
#you cannot specify every priority with different file for log4j
log4j.rootLogger=debug,stdout,info,debug,warn,error 

#console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender 
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout 
log4j.appender.stdout.layout.ConversionPattern= [%d{yyyy-MM-dd HH:mm:ss a}]:%p %l%m%n
#info log
log4j.logger.info=info
log4j.appender.info=org.apache.log4j.DailyRollingFileAppender 
log4j.appender.info.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.info.File=./src/main/logs/testapiauto.log
log4j.appender.info.Append=true
log4j.appender.info.Threshold=INFO
log4j.appender.info.layout=org.apache.log4j.PatternLayout 
log4j.appender.info.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss a} [Thread: %t][ Class:%c >> Method: %l ]%n%p:%m%n
#debug log
log4j.logger.debug=debug
log4j.appender.debug=org.apache.log4j.DailyRollingFileAppender 
log4j.appender.debug.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.debug.File=./src/main/logs/testapiauto.log
log4j.appender.debug.Append=true
log4j.appender.debug.Threshold=DEBUG
log4j.appender.debug.layout=org.apache.log4j.PatternLayout 
log4j.appender.debug.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss a} [Thread: %t][ Class:%c >> Method: %l ]%n%p:%m%n
#warn log
log4j.logger.warn=warn
log4j.appender.warn=org.apache.log4j.DailyRollingFileAppender 
log4j.appender.warn.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.warn.File=./src/main/logs/testapiauto.log
log4j.appender.warn.Append=true
log4j.appender.warn.Threshold=WARN
log4j.appender.warn.layout=org.apache.log4j.PatternLayout 
log4j.appender.warn.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss a} [Thread: %t][ Class:%c >> Method: %l ]%n%p:%m%n
#error
log4j.logger.error=error
log4j.appender.error = org.apache.log4j.DailyRollingFileAppender
log4j.appender.error.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.error.File = ./src/main/logs/testapiauto.log
log4j.appender.error.Append = true
log4j.appender.error.Threshold = ERROR 
log4j.appender.error.layout = org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss a} [Thread: %t][ Class:%c >> Method: %l ]%n%p:%m%n